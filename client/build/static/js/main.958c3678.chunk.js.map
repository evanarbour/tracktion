{"version":3,"sources":["utils/GlobalState.js","components/Navbar.js","components/Footer.js","utils/mutations.js","utils/auth.js","pages/SignIn.js","pages/SignUp.js","pages/NotFound.js","components/HabitForm.js","components/HabitList.js","utils/queries.js","components/GoalForm.js","components/GoalList.js","pages/Dashboard.js","pages/GoalPage.js","pages/HabitPage.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","Provider","Navbar","Footer","LOGIN","gql","ADD_USER","ADD_HABIT","ADD_GOAL","ADD_GOAL_STEP","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Copyright","props","Typography","variant","color","align","Link","href","getFullYear","theme","createTheme","SignIn","useState","email","password","formState","setFormState","useMutation","login","handleFormSubmit","error","event","a","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","placeholder","type","id","onChange","FormControlLabel","control","Checkbox","label","Button","mb","Grid","container","item","xs","SignUp","username","addUser","spacing","autoComplete","justifyContent","NotFound","HabitForm","setName","addHabit","reload","autoFocus","HabitList","user","QUERY_USER","GoalForm","steps","endDate","setCharacterCount","update","cache","addGoal","goals","readQuery","query","writeQuery","e","date","length","LocalizationProvider","dateAdapter","AdapterDateFns","GoalList","addGoalStep","map","goal","_id","Dashboard","useQuery","loading","textAlign","p","borderRadius","to","GoalPage","HabitPage","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","default","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.958c3678.chunk.js","sourcesContent":["import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <div>\n      NAVBAR TEXT GOES HERE!\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      FOOTER TEXT GOES HERE!\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n                email\n                habits {\n                    _id\n                    name\n                    tracktionDays\n                    createdAt\n                }\n                sharedHabits {\n                    _id\n                    name\n                    tracktionDays\n                    createdAt\n                }\n                goals {\n                    _id\n                    name\n                    goalSteps {\n                        _id\n                        name\n                        completed\n                    }\n                    goalEndDate\n                    createdAt\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($username: String!, $email: String!, $password: String!) {\n        addUser(username: $username, email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_HABIT = gql`\n    mutation addHabit($name: String!) {\n        addHabit(name: $name) {\n            _id\n            name\n            tracktionDays\n            createdAt\n        }\n    }\n`;\n\nexport const ADD_GOAL = gql`\n    mutation addGoal($name: String!, $steps: [String]!, $endDate: Date) {\n        addGoal(name: $name, steps: $steps, endDate: $endDate) {\n            _id\n            name\n            goalSteps {\n                _id\n                name\n                completed\n            }\n            goalEndDate\n            createdAt\n        }\n    }\n`;\n\nexport const ADD_GOAL_STEP = gql`\n    mutation addGoalStep($id: ID!, $name: String!) {\n        addGoalStep(goalId: $id, name: $name) {\n            _id\n            name\n            goalSteps {\n                _id\n                name\n                completed\n            }\n            goalEndDate\n            createdAt\n        }\n    }\n`;\n\nexport const UPDATE_HABIT = gql`\n    mutation updateHabit($id: ID!, $input: TracktionDaysInput) {\n        updateHabit(habitId: $id, input: $input) {\n            _id\n            name\n            tracktionDays\n            createdAt\n        }\n    }\n`;\n\nexport const UPDATE_GOAL = gql`\n    mutation updateGoal($id: ID!, $endDate: Date) {\n        updateGoal(goalId: $id, endDate: $endDate) {\n            _id\n            name\n            goalSteps {\n                _id\n                name\n                completed\n            }\n            goalEndDate\n            createdAt\n        }\n    }\n`;\n\nexport const UPDATE_GOAL_STEP = gql`\n    mutation updateGoalStep($id: ID!, $completed: Boolean!) {\n        updateGoalStep(goalStepId: $id, completed: $completed) {\n            _id\n            name\n            completed\n        }\n    }\n`;\n\nexport const REMOVE_HABIT = gql`\n    mutation removeHabit($id: ID!) {\n        removeHabit(habitId: $id) {\n            _id\n            name\n            tracktionDays\n            createdAt\n        }\n    }\n`;\n\nexport const REMOVE_GOAL = gql`\n    mutation removeGoal($id: ID!) {\n        removeGoal(goalId: $id) {\n            _id\n            name\n            goalSteps {\n                _id\n                name\n                completed\n            }\n            goalEndDate\n            createdAt\n        }\n    }\n`;\n\nexport const REMOVE_GOAL_STEP = gql`\n    mutation removeGoalStep($id: ID!) {\n        removeGoalStep(goalStepId: $id) {\n            _id\n            name\n            completed\n        }\n    }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={handleChange}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"./SignUp\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        username: formState.username,\n        email: formState.email,\n        password: formState.password,\n        \n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  required\n                  fullWidth\n                  placeholder=\"username\"\n                  name=\"username\"\n                  type=\"username\"\n                  id=\"username\"\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  placeholder=\"youremail@test.com\"\n                  name=\"email\"\n                  type=\"email\"\n                  id=\"email\"\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  id=\"pwd\"\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/SignIn\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from \"react\";\n\nfunction NotFound() {\n<h1>This page does not exist! Try again</h1>\n}\n\n\nexport default NotFound","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { ADD_HABIT } from '../utils/mutations';\n\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme();\n\nconst HabitForm = () => {\n    const [name, setName] = useState('');\n\n    const [addHabit, { error }] = useMutation(ADD_HABIT);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            // Execute mutation and pass in defined parameter data as variables\n            const { data } = await addHabit({\n              variables: { name },\n            });\n        \n            window.location.reload();\n            console.log(data);\n          } catch (err) {\n            console.error(err);\n          }\n\n    }\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <AddIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Add New Habit\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"goal\"\n              label=\"New Habit\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              name=\"habit\"\n              autoComplete=\"habit\"\n              autoFocus\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Save Habit\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default HabitForm;","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme();\n\nconst HabitList = ({ user }) => {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Grid container spacing={2}>\n            <Grid item xs={5}>\n                \n            </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default HabitList;","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n    query getUser($username: String!) {\n        user(username: $username) {\n            _id\n            username\n            email\n            habits {\n                _id\n                name\n                tracktionDays\n                createdAt\n            }\n            sharedHabits {\n                _id\n                name\n                tracktionDays\n                createdAt\n            }\n            goals {\n                _id\n                name\n                goalSteps {\n                    _id\n                    name\n                    completed\n                }\n                goalEndDate\n                createdAt\n            }\n        }\n    }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_GOAL } from \"../utils/mutations\";\nimport { QUERY_USER } from \"../utils/queries\";\n\nimport AdapterDateFns from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme();\n\nconst GoalForm = () => {\n\n  \n  const [formState, setFormState] = useState({\n    name: \"\",\n    steps: \"\",\n    endDate: \"\",\n  });\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addGoal, { error }] = useMutation(ADD_GOAL, {\n    update(cache, { data: { addGoal } }) {\n      try {\n        const { goals } = cache.readQuery({ query: QUERY_USER });\n\n        cache.writeQuery({\n          query: QUERY_USER,\n          data: { goals: [addGoal, ...goals] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Execute mutation and pass in defined parameter data as variables\n      const { data } = await addGoal({\n        variables: { ...formState },\n      });\n\n      setFormState({\n        name: \"\",\n        steps: \"\",\n        date: \"\",\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\nconst handleChange = (event) => {\n  const { name, value } = event.target;\n  if (name === 'name' && value.length <=280) {\n    setFormState({ ...formState, [name]: value });\n    setCharacterCount(value.length);\n  } else if (name !== 'name') {\n    setFormState({ ...formState,[name]: value })\n  }\n}\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          ...\n        </LocalizationProvider>\n\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <AddIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Add New Goal\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"name\"\n              placeholder=\"New Goal\"\n              value={formState.name}\n              onChange={handleChange}\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n            />\n\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n              label=\"Goal End Date\"\n                value={formState.endDate}\n                onChange={(event) => setFormState(event.target.value)}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider> */}\n\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"date\"\n              placeholder=\"Goal End Date\"\n              value={formState.endDate}\n              onChange={handleChange}\n              name=\"endDate\"\n              autoComplete=\"endDate\"\n              autoFocus\n            />\n\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"goal\"\n              label=\"First Step\"\n              value={formState.steps}\n              onChange={handleChange}\n              name=\"steps\"\n              autoComplete=\"steps\"\n              autoFocus\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Save Goal\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default GoalForm;\n","import React from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_GOAL_STEP } from \"../utils/mutations\";\n// import { QUERY_USER } from \"../utils/queries\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useState } from \"react\";\n\nconst theme = createTheme();\n\nconst GoalList = ({ goals }) => {\n  // if (!goals.length) {\n  //   return <h3>No Goals Yet</h3>;\n  // }\n  const [name, setName] = useState(\"\");\n\n  const [addGoalStep, { error }] = useMutation(ADD_GOAL_STEP);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addGoalStep({\n        variables: { name },\n      });\n      window.location.reload();\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <ListAltIcon />\n          </Avatar>\n          <div>\n            {goals &&\n              goals.map((goal) => (\n                <div key={goal._id}>\n                  <h4>\n                    Goal One:\n                    {goal.name}\n                  </h4>\n                  <ul> {goal.steps}</ul>\n                </div>\n              ))}\n          </div>\n          <Box\n            component=\"form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"step\"\n              label=\"Add Step\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              name=\"step\"\n              autoComplete=\"step\"\n              autoFocus\n            />\n            <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n              Add Step\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default GoalList;\n","import * as React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport HabitForm from \"../components/HabitForm\";\nimport HabitList from \"../components/HabitList\";\nimport GoalForm from \"../components/GoalForm\";\nimport GoalList from \"../components/GoalList\";\n\nimport { QUERY_USER } from \"../utils/queries\";\n\nconst theme = createTheme();\n\nconst Dashboard = () => {\n  const { loading, data } = useQuery(QUERY_USER);\n  const user = data?.user || [];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Grid container sx={{ textAlign: \"left\" }}>\n          tracktion\n        </Grid>\n        <Grid\n          container\n          spacing={2}\n          sx={{ justifyContent: \"center\", textAlign: \"center\" }}\n        >\n          <Grid item xs={5}>\n            <Box sx={{ p: 2, m: 5, bgcolor: \"primary.main\", borderRadius: 4 }}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Current Goals:\n              </Typography>\n            </Box>\n            <Box sx={{ p: 2, m: 2, bgcolor: \"#f5f5f5\", borderRadius: 4 }}>\n              <Button component={Link} to=\"/goals\" color=\"primary\">\n              {loading ? <h2> loading... </h2> : <GoalList/>}\n              </Button>\n            </Box>\n            <Box sx={{ p: 2, m: 2, bgcolor: \"#f5f5f5\", borderRadius: 4 }}>\n              {/* <Button component={Link} to=\"/goals\" color=\"primary\"> */}\n              <Button>\n                {loading ? <h2> loading... </h2> : <GoalList user={user} />}\n              </Button>\n            </Box>\n            <Box>\n              <GoalForm />\n            </Box>\n          </Grid>\n          <Grid item xs={5}>\n            <Box sx={{ p: 2, m: 5, bgcolor: \"primary.main\", borderRadius: 4 }}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Current Habits:\n              </Typography>\n            </Box>\n            <Box>\n              {loading ? <h2> loading... </h2> : <HabitList user={user} />}\n            </Box>\n            <Box>\n              <HabitForm />\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Dashboard;\n","import GoalList from '../components/GoalList';\nimport GoalForm from \"../components/GoalForm\";\n\nexport default function GoalPage() {\n    return (\n<div>\n    <GoalList />\n    <GoalForm />\n</div>\n    )}","import HabitList from '../components/HabitList';\nimport HabitForm from \"../components/HabitForm\";\n\nexport default function HabitPage() {\n    return (\n        <div>\n            <HabitList />\n            <HabitForm />\n        </div>\n    )};","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { StoreProvider } from \"./utils/GlobalState\";\n\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport NotFound from \"./pages/NotFound\";\nimport Dashboard from \"./pages/Dashboard\";\nimport GoalPage from \"./pages/GoalPage\";\nimport HabitPage from \"./pages/HabitPage\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/home\" component={Dashboard} />\n            <Route path=\"/goals\" component={GoalPage} />\n            <Route path=\"/habits\" component={HabitPage} />\n            <Route default component={NotFound} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}